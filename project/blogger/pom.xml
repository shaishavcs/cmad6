<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.cmad.essentials</groupId>
	<artifactId>blogger</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	
	<name>blogger</name>
	<description>Blogger project with Spring Boot and MongoDB</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<start-class>com.cmad.essentials.blogger.BloggerApplication</start-class>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- <dependency> <groupId>io.springfox</groupId> <artifactId>springfox-swagger-ui</artifactId> 
			<version>2.6.1</version> <scope>compile</scope> </dependency> <dependency> 
			<groupId>io.springfox</groupId> <artifactId>springfox-swagger2</artifactId> 
			<version>2.6.1</version> <scope>compile</scope> </dependency> -->
<!-- 		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>4.2.1.Final</version>
		</dependency>
 -->
		<dependency>
			<groupId>org.springframework.security.oauth</groupId>
			<artifactId>spring-security-oauth2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-autoconfigure</artifactId>
		</dependency>
		<!-- <dependency> <groupId>org.hibernate</groupId> <artifactId>hibernate-core</artifactId> 
			</dependency> <dependency> <groupId>org.hibernate.javax.persistence</groupId> 
			<artifactId>hibernate-jpa-2.1-api</artifactId> <version>1.0.0.Final</version> 
			</dependency> -->		<!-- <dependency> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-starter-data-jpa</artifactId> 
			</dependency> -->
		<dependency>
			<groupId>antlr</groupId>
			<artifactId>antlr</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<dependency> <groupId>io.jsonwebtoken</groupId> <artifactId>jjwt</artifactId> 
			<version>0.9.0</version> </dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-jwt</artifactId>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>
<!-- 		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
 -->		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongo-java-driver</artifactId>
		</dependency>
		<dependency>
			<groupId>org.mongodb.morphia</groupId>
			<artifactId>morphia</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-tomcat</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
	        	<groupId>junit</groupId>
	        	<artifactId>junit</artifactId>
	        	<version>4.12</version>
        </dependency>
		<!-- <dependency> <groupId>org.hibernate.ogm</groupId> <artifactId>hibernate-ogm-mongodb</artifactId> 
			<version>4.0.0.Beta1</version> </dependency> -->
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<!-- <plugin> <groupId>com.github.kongchen</groupId> <artifactId>swagger-maven-plugin</artifactId> 
				<version>3.1.3</version> <configuration> <apiSources> <apiSource> <springmvc>false</springmvc> 
				<locations>some.package</locations> <basePath>/api</basePath> <info> <title>Put 
				your REST service's name here</title> <description>Add some description</description> 
				<version>v1</version> </info> <swaggerDirectory>${project.build.directory}/api</swaggerDirectory> 
				<attachSwaggerArtifact>true</attachSwaggerArtifact> </apiSource> </apiSources> 
				</configuration> <executions> <execution> <phase>${phase.generate-documentation}</phase> 
				fx process-classes phase <goals> <goal>generate</goal> </goals> </execution> 
				</executions> </plugin> <plugin> <groupId>io.github.robwin</groupId> <artifactId>swagger2markup-maven-plugin</artifactId> 
				<version>0.9.3</version> <configuration> <inputDirectory>${project.build.directory}/api</inputDirectory> 
				<outputDirectory>${generated.asciidoc.directory}</outputDirectory> specify 
				location to place asciidoc files <markupLanguage>asciidoc</markupLanguage> 
				</configuration> <executions> <execution> <phase>${phase.generate-documentation}</phase> 
				<goals> <goal>process-swagger</goal> </goals> </execution> </executions> 
				</plugin> <plugin> <groupId>org.asciidoctor</groupId> <artifactId>asciidoctor-maven-plugin</artifactId> 
				<version>1.5.3</version> <dependencies> <dependency> <groupId>org.asciidoctor</groupId> 
				<artifactId>asciidoctorj-pdf</artifactId> <version>1.5.0-alpha.11</version> 
				</dependency> <dependency> <groupId>org.jruby</groupId> <artifactId>jruby-complete</artifactId> 
				<version>1.7.21</version> </dependency> </dependencies> <configuration> <sourceDirectory>${asciidoctor.input.directory}</sourceDirectory> 
				You will need to create an .adoc file. This is the input to this plugin <sourceDocumentName>swagger.adoc</sourceDocumentName> 
				<attributes> <doctype>book</doctype> <toc>left</toc> <toclevels>2</toclevels> 
				<generated>${generated.asciidoc.directory}</generated> this path is referenced 
				in swagger.adoc file. The given file will simply point to the previously 
				create adoc files/assemble them. </attributes> </configuration> <executions> 
				<execution> <id>asciidoc-to-html</id> <phase>${phase.generate-documentation}</phase> 
				<goals> <goal>process-asciidoc</goal> </goals> <configuration> <backend>html5</backend> 
				<outputDirectory>${generated.html.directory}</outputDirectory> specify location 
				to place html file </configuration> </execution> <execution> <id>asciidoc-to-pdf</id> 
				<phase>${phase.generate-documentation}</phase> <goals> <goal>process-asciidoc</goal> 
				</goals> <configuration> <backend>pdf</backend> <outputDirectory>${generated.pdf.directory}</outputDirectory> 
				specify location to place pdf file </configuration> </execution> </executions> 
				</plugin> -->
		</plugins>
	</build>


</project>
